apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.letv.buildtest"
        minSdkVersion 23
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    productFlavors {
//        打包生成的applicationId跟随product flavor的id，优先级高于BuildTypes中定义的applicationId
        red {
            applicationId "com.letv.red"
            versionName "red"
            versionCode 3
        }

        blue {
            applicationId "com.letv.blue"
            versionName "blue"
            versionCode 4
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        staging.initWith(buildTypes.debug)
        staging {
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            debuggable = false
            buildConfigField("String", "API_URL", "\"http://staging.example.com/api\"")
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    stagingCompile 'com.android.support:support-annotations:25.3.0'
//    为staging buildType 添加glide依赖，仅staging build type 可以引用
//    奇怪的是在staging中使用Glide类时，不能自动导入该类
    stagingCompile 'com.github.bumptech.glide:glide:3.7.0'
}
